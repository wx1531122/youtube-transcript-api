from pydantic import BaseModel, Field
from typing import List, Optional

class TranslationLanguageMetadata(BaseModel):
    language: str
    language_code: str

    class Config:
        # orm_mode is deprecated, use from_attributes = True for Pydantic V2
        from_attributes = True


class TranscriptMetadata(BaseModel):
    language: str
    language_code: str
    is_generated: bool
    is_translatable: bool
    translation_languages: List[TranslationLanguageMetadata] = Field(
        default_factory=list,
        description="List of languages this transcript can be translated into."
    )

    class Config:
        from_attributes = True


class TranscriptListResponse(BaseModel):
    video_id: str = Field(description="The ID of the YouTube video.")
    manually_created_transcripts: List[TranscriptMetadata] = Field(
        description="List of manually created transcripts available for the video."
    )
    generated_transcripts: List[TranscriptMetadata] = Field(
        description="List of automatically generated transcripts available for the video."
    )


class FetchedTranscriptSegment(BaseModel):
    text: str = Field(description="The actual text of the transcript segment.")
    start: float = Field(description="The start time of the segment in seconds.")
    duration: float = Field(description="The duration of the segment in seconds.")

    class Config:
        from_attributes = True


class FetchedTranscriptResponse(BaseModel):
    video_id: str = Field(description="The ID of the YouTube video.")
    language: str = Field(description="The language of the fetched transcript.")
    language_code: str = Field(description="The language code of the fetched transcript (e.g., 'en', 'es').")
    is_generated: bool = Field(description="Indicates if the fetched transcript was auto-generated by YouTube.")
    transcript: List[FetchedTranscriptSegment] = Field(
        description="A list of transcript segments, each containing text, start time, and duration."
    )

    class Config:
        from_attributes = True


class TranslatedTranscriptResponse(BaseModel):
    video_id: str = Field(description="The ID of the YouTube video.")
    source_language_code: str = Field(description="The language code of the original transcript that was translated.")
    target_language_code: str = Field(description="The language code into which the transcript was translated.")
    language: str = Field(description="The language of the translated transcript (should match target_language_code).")
    language_code: str = Field(description="The language code of the translated transcript.")
    is_generated: bool = Field(
        description="Indicates if the *original* transcript (before translation) was auto-generated."
    )
    transcript: List[FetchedTranscriptSegment] = Field(
        description="A list of translated transcript segments."
    )

    class Config:
        from_attributes = True
